{
  "settings": {
    "react": {
      "createClass": "createReactClass",
      "pragma": "React",
      "version": "detect",
      "flowVersion": "0.53"
    },
    "propWrapperFunctions": [
      "forbidExtraProps",
      {"property": "freeze", "object": "Object"},
      {"property": "myFavoriteWrapper"}
    ],
    "linkComponents": [
      "Hyperlink",
      {"name": "Link", "linkAttribute": "to"}
    ]
  },
  "extends": [
    "plugin:react/recommended"
  ],
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaFeatures": {
      "experimentalObjectRestSpread": true,
      "jsx": true
    },
    "sourceType": "module"
  },
  "env": {
    "browser": true,
    "es6": true
  },
  # "globals": [
  #   "describe",
  #   "test",
  #   "it",
  #   "jest",
  #   "beforeAll",
  #   "beforeEach",
  #   "afterAll",
  #   "afterEach",
  #   "expect",
  #   "fetch",
  #   "navigator",
  #   "__DEV__",
  #   "XMLHttpRequest",
  #   "FormData",
  #   "React$Element",
  #   "If",
  #   "Choose",
  #   "When",
  #   "Otherwise",
  #   "For",
  #   "With"
  # ],
  "rules": {
    "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }],
    "indent": [ "error", 2, { "SwitchCase": 1, "VariableDeclarator": 1, "MemberExpression": 1}],
    "react/jsx-indent": ["error", 2],
    "react/jsx-indent-props": ["error", 2],
    "linebreak-style": ["error", "unix"],
    "quotes": ["error", "single"],
    "semi": ["error", "always"],

    # "jsx-quotes": ["error", "prefer-double"],
    # "space-in-parens": [ 0, "always" ],
    # "template-curly-spacing": [ 2, "always" ],
    # # "array-bracket-spacing": [ 2, "always" ],
    # "object-curly-spacing": [ 2, "always" ],
    # # "computed-property-spacing": [ 2, "always" ],
    # "no-multiple-empty-lines": [ 2, { "max": 1, "maxEOF": 0, "maxBOF": 0 } ],
    # # "quotes": [ 1, "single", "avoid-escape" ],
    # # "no-use-before-define": [ 2, { "functions": false } ],
    # # "semi": [0, "never"],
    # # "prefer-const": 1,
    # "react/prefer-es6-class": 0,
    # "react/jsx-filename-extension": 0,
    "react/jsx-curly-spacing": [ 2, { "when": "always", "attributes": { "allowMultiline": false }, "children": true }],
    # "react/jsx-space-before-closing": "error",
    "react/jsx-tag-spacing": ["error", { "beforeSelfClosing": "always" }],
    # "react/jsx-indent": [ 1, 2 ],
    # # "react/jsx-max-props-per-line": [1, { "when": "always" }],
    "react/prop-types": [ 0 ],
    # # "react/no-array-index-key": [ 1 ],
    # 'class-methods-use-this': ['error', {
    #   exceptMethods: [
    #     'render',
    #     'getInitialState',
    #     'getDefaultProps',
    #     'getChildContext',
    #     'componentWillMount',
    #     'componentDidMount',
    #     'componentWillReceiveProps',
    #     'shouldComponentUpdate',
    #     'componentWillUpdate',
    #     'componentDidUpdate',
    #     'componentWillUnmount',
    #   ],
    # }],
    # "no-undef": ["error"],
    # "react/jsx-no-undef": [2, { "allowGlobals": true }],
    # "no-unused-vars": "on",
    "no-unused-vars": ["warn", { "vars": "all", "args": "after-used", "ignoreRestSiblings": false }],
    # "no-case-declarations": [ 1 ],
    # "no-return-assign": [ 1 ],
    # "no-param-reassign": [ 1 ],
    # # "no-shadow": [ 1 ],
    # "no-console": "off",
    # "camelcase": [ 1 ],
    # "no-underscore-dangle": [0, "always"]
  }
}
